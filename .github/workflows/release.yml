name: Release

on:
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        target: [
          { os: windows-latest, extension: dll },
          { os: ubuntu-latest,  extension: so },
          { os: macos-latest, extension: dylib }
        ]

    runs-on: ${{ matrix.target.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly

      - name: Enable nightly
        run: rustup override set nightly

      - name: Rust cache
        uses: Swatinem/rust-cache@v2.2.0

      - name: Build library
        run: cargo build --release
        env:
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}

      - name: Upload asset
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: target/release/*.${{ matrix.target.extension }}
          update_latest_release: true
